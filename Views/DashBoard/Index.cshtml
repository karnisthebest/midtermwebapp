@model List<Product> 
@{  
    var productNames = Newtonsoft.Json.JsonConvert.SerializeObject( 
        Model
        .Where(y => y.product_qty < 60)
        .Select( x => x.product_name)
        .ToList() 
        );  

    var productQty = Newtonsoft.Json.JsonConvert.SerializeObject( 
        Model
        .Where(y => y.product_qty < 60)
        .Select( x => x.product_qty )
        .ToList() 
        );  
    ViewData["Title"] = "Bar Chart";  
}  

<h1>Dashboard</h1>
<h5>Products that have qty less than 60</h5>
 <div class="box-body">  
  
        <div class="chart-container">  
            <canvas id="myChart" style="width:100%; height:500px"></canvas>  
        </div>  
</div>  

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>  
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>  
  
<script>
var ctx = document.getElementById("myChart").getContext('2d');
var myChart = new Chart(ctx, {
    type: 'bar',
    data: {
        labels: @Html.Raw(productNames), //x product name
        datasets: [{
            label: 'Products that have qty less than 60',
            data: @Html.Raw(productQty), //y qty of product
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'   
            ],
            borderColor: [
                'rgba(255,99,132,1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero:true
                }
            }]
        }
    }
});
</script>